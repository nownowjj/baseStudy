//깃허브 링크
https://github.com/
//해당 소스 설명 블로그 
https://shortcuts.tistory.com/m/8


//저장소 생성 및 연결
$ git init
$ git remote add origin [원격저장소 주소]
$ git branch -m master main

//파일 업로드
$ git pull origin main
$ git add .
$ git commit -m "commit message"
$ git push origin main

//추가적인 명령어
$ git remote -v
$ git remote rm origin
$ git branch
$ git config --global init.defaultBranch [브랜치 이름]
$ git status
$ git rm --cached -r .





[저장소를 처음 만드는 경우]
1. 깃허브에 원격 저장소(repository) 만들기
본인 깃허브 페이지의 Repository 탭에서 New 버튼을 누르면 저장소를 생성할 수 있다.


2. 로컬 저장소 만들기
내 컴퓨터 폴더 중 깃허브에 올리려는 폴더에 마우스 우클릭하여 git bash를 열어주고 다음과 같이 입력한다.
	- $ git init	//로컬 저장소 생성
여기서 .git 파일이 생성된다.
'.'으로 시작하는 폴더는 숨김처리되니 보이지는 않음.



3. 로컬 저장소와 원격 저장소 연결
원격 저장소의 주소를 이용해 두 저장소를 연결한다.
주소는 깃허브 저장소에서 초록색 "Code"버튼을 누르면 보이는 HTTPS 탭에 적힌 주소를 사용하면 된다.
잘 모르겠으면 저장소 페이지 주소에서 뒤에 .git을 붙여주자.
즉 형식은 다음과 같다: https://github.com/아이디/저장소이름.git 
	- $ git remote add origin [원격저장소 주소]	//원격 저장소와 연결



4. 파일 업로드 준비
branch 개념은 따로 설명하진 않겠지만 대충 버전이라고 이해하면 된다.
	- $ git branch -m master main //브랜치 이름 바꾸기






[저장소가 이미 있는 경우]
이제 저장소도 만들었고 이미 업로드도 한 상태일 때 새로운 파일을 올려보자.
로컬 저장소를 만들고 연결하는 등의 과정은 이번엔 필요없고,
아래 명령어만 순서대로 입력하면 된다. (main 브랜치로 가정)
$ git pull origin main
$ git add .
$ git commit -m "commit message"
$ git push origin main



//로컬 저장소에서 원격 저장소로 올리기
$ git push origin [브랜치 이름]



//커밋 메시지 없이 커밋하기
$ git commit



//커밋 메시지를 적는 경우
$ git commit -m "commit message"



//add한 파일 모두 취소
$ git rm --cached -r 



//특정 파일만 add 취소
$ git rm --cached [파일]



작업하다보면 폴더에 원격 저장소가 연결되어 있는지 확인하고 싶을 때
//연결된 원격 저장소 확인
$ git remote -v


원격 저장소를 잘못 연결해서 다시 정할 때
//기존 원격 저장소와의 연결 삭제
$ git remote rm origin



현재 내가 있는 branch를 확인하고 싶다면 아래 명령어를 이용하자.
//현재 브랜치 이름 확인
$ git branch


저장소를 만들때마다 브랜치 이름을 변경하기 귀찮으니, 항상 main으로 이름짓도록 설정할 수 있다.
아래 명령어에서 브랜치 이름을 main으로 하여 입력하면, 이제 git init을 할 때마다 브랜치 이름이 main이 된다.
//브랜치 기본(default)이름 설정
$ git config --global init.defaultBranch [브랜치 이름]